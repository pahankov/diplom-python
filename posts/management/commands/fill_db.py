from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from posts.models import Post, Comment, Like
from django.utils import timezone
import random
from datetime import timedelta
from PIL import Image
import os
from django.conf import settings
import uuid
from faker import Faker
from django.db import connection

User = get_user_model()
fake = Faker()

class Command(BaseCommand):
    help = '–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--users',
            type=int,
            help='Number of test users to create',
            default=30,
        )
        parser.add_argument(
            '--posts',
            type=int,
            help='Number of test posts to create',
            default=150,
        )
        parser.add_argument(
            '--likes',
            type=int,
            help='Number of test likes to create',
            default=500,
        )
        parser.add_argument(
            '--clear',
            action='store_true',
            help='Clear existing data before populating',
        )

    def create_test_image(self, width=800, height=600, idx=0):
        media_dir = os.path.join(settings.MEDIA_ROOT, 'posts')
        os.makedirs(media_dir, exist_ok=True)
        color = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))
        filename = f'test_image_{idx}_{uuid.uuid4()}.jpg'
        filepath = os.path.join(media_dir, filename)
        image = Image.new('RGB', (width, height), color)
        image.save(filepath, 'JPEG')
        return f'posts/{filename}'

    def handle(self, *args, **kwargs):
        clear_data = kwargs['clear'] # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ --clear

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥ --clear
        if clear_data:
            self.stdout.write('–£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...')
            Like.objects.all().delete()
            Comment.objects.all().delete()
            Post.objects.all().delete()
            User.objects.exclude(is_superuser=True).delete() # –û—Å—Ç–æ—Ä–æ–∂–Ω–æ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!

            # –°–±—Ä–æ—Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ID –¥–ª—è –º–æ–¥–µ–ª–∏ Post –≤ PostgreSQL
            with connection.cursor() as cursor:
                # –ò–º—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±—ã—á–Ω–æ apps_modelname_id_seq
                cursor.execute("ALTER SEQUENCE posts_post_id_seq RESTART WITH 1;")
            self.stdout.write('–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å ID –¥–ª—è Post —Å–±—Ä–æ—à–µ–Ω–∞.')

        male_first_names = ['–ê–ª–µ–∫—Å–∞–Ω–¥—Ä', '–ê–ª–µ–∫—Å–µ–π', '–ê–Ω–¥—Ä–µ–π', '–ê—Ä—Ç–µ–º', '–í–ª–∞–¥–∏–º–∏—Ä', '–î–º–∏—Ç—Ä–∏–π', '–ï–≤–≥–µ–Ω–∏–π', '–ò–≤–∞–Ω', '–ú–∞–∫—Å–∏–º', '–ú–∏—Ö–∞–∏–ª', '–ù–∏–∫–æ–ª–∞–π', '–°–µ—Ä–≥–µ–π', '–ü–∞–≤–µ–ª', '–†–æ–º–∞–Ω', '–°—Ç–µ–ø–∞–Ω']
        female_first_names = ['–ê–Ω–Ω–∞', '–ï–ª–µ–Ω–∞', '–ú–∞—Ä–∏—è', '–ù–∞—Ç–∞–ª—å—è', '–û–ª—å–≥–∞', '–¢–∞—Ç—å—è–Ω–∞', '–Æ–ª–∏—è', '–ò—Ä–∏–Ω–∞', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', '–ê–Ω–∞—Å—Ç–∞—Å–∏—è', '–î–∞—Ä—å—è', '–ö—Å–µ–Ω–∏—è', '–ê–ª–∏—Å–∞', '–ü–æ–ª–∏–Ω–∞', '–°–æ—Ñ–∏—è']
        male_last_names = ['–ò–≤–∞–Ω–æ–≤', '–°–º–∏—Ä–Ω–æ–≤', '–ö—É–∑–Ω–µ—Ü–æ–≤', '–ü–æ–ø–æ–≤', '–í–∞—Å–∏–ª—å–µ–≤', '–ü–µ—Ç—Ä–æ–≤', '–°–æ–∫–æ–ª–æ–≤', '–ú–∏—Ö–∞–π–ª–æ–≤', '–ù–æ–≤–∏–∫–æ–≤', '–§–µ–¥–æ—Ä–æ–≤', '–ú–æ—Ä–æ–∑–æ–≤', '–í–æ–ª–∫–æ–≤', '–ê–ª–µ–∫—Å–µ–µ–≤', '–õ–µ–±–µ–¥–µ–≤', '–°–µ–º–µ–Ω–æ–≤']
        female_last_names = ['–ò–≤–∞–Ω–æ–≤–∞', '–°–º–∏—Ä–Ω–æ–≤–∞', '–ö—É–∑–Ω–µ—Ü–æ–≤–∞', '–ü–æ–ø–æ–≤–∞', '–í–∞—Å–∏–ª—å–µ–≤–∞', '–ü–µ—Ç—Ä–æ–≤–∞', '–°–æ–∫–æ–ª–æ–≤–∞', '–ú–∏—Ö–∞–π–ª–æ–≤–∞', '–ù–æ–≤–∏–∫–æ–≤–∞', '–§–µ–¥–æ—Ä–æ–≤–∞', '–ú–æ—Ä–æ–∑–æ–≤–∞', '–í–æ–ª–∫–æ–≤–∞', '–ê–ª–µ–∫—Å–µ–µ–≤–∞', '–õ–µ–±–µ–¥–µ–≤–∞', '–°–µ–º–µ–Ω–æ–≤–∞']

        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = []
        for i in range(15):
            username = f"{male_first_names[i].lower()}_{male_last_names[i].lower()}"
            user = User.objects.create_user(
                username=username,
                password=f'password{i+1}',
                email=f'{username}@example.com',
                first_name=male_first_names[i],
                last_name=male_last_names[i]
            )
            users.append(user)
            self.stdout.write(f'–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username}')
        for i in range(15):
            username = f"{female_first_names[i].lower()}_{female_last_names[i].lower()}"
            user = User.objects.create_user(
                username=username,
                password=f'password{i+16}',
                email=f'{username}@example.com',
                first_name=female_first_names[i],
                last_name=female_last_names[i]
            )
            users.append(user)
            self.stdout.write(f'–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username}')

        # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤
        post_texts = [
            f"–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ—Å—Ç –Ω–æ–º–µ—Ä {i+1}: {txt}" for i, txt in enumerate([
                "–û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏! ‚òÄÔ∏è",
                "–ú–æ–π –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –∑–∞–ø—É—â–µ–Ω! üöÄ",
                "–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç —Å–µ–≥–æ–¥–Ω—è... üåÖ",
                "–í–∫—É—Å–Ω—ã–π —É–∂–∏–Ω –≤ –ª—é–±–∏–º–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ üçΩÔ∏è",
                "–£–¥–∞—á–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–µ–≥–æ–¥–Ω—è üí™",
                "–ù–æ–≤–∞—è –∫–Ω–∏–≥–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π üìö",
                "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! ‚úàÔ∏è",
                "–ú–æ–π –ª—é–±–∏–º—ã–π –≥–æ—Ä–æ–¥ –≤—ã–≥–ª—è–¥–∏—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –∫—Ä–∞—Å–∏–≤–æ —Å–µ–≥–æ–¥–Ω—è üåÜ",
                "–£–¥–∞–ª–æ—Å—å –ø–æ–π–º–∞—Ç—å –æ—Ç–ª–∏—á–Ω—ã–π –∫–∞–¥—Ä üì∏",
                "–í—Å—Ç—Ä–µ—á–∞ —Å –¥—Ä—É–∑—å—è–º–∏ –ø–æ—Å–ª–µ –¥–æ–ª–≥–æ–π —Ä–∞–∑–ª—É–∫–∏ üë•",
                "–ù–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç –æ–∫–∞–∑–∞–ª—Å—è –ø—Ä–æ—Å—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–º! üë®‚Äçüç≥",
                "–£—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–±–µ–∂–∫–∞ –∑–∞—Ä—è–∂–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–µ–π –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å üèÉ‚Äç‚ôÇÔ∏è",
                "–ú–æ–π —Å–∞–¥ –≤ –ø–æ–ª–Ω–æ–º —Ü–≤–µ—Ç—É üå∏",
                "–ù–æ–≤—ã–π –∞–ª—å–±–æ–º –ª—é–±–∏–º–æ–π –≥—Ä—É–ø–ø—ã –ø—Ä–æ—Å—Ç–æ –æ–≥–æ–Ω—å! üéµ",
                "–£–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —à–æ–ø–∏–Ω–≥–∞ üõçÔ∏è",
                "–ü—Ä–æ–±—É—é –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.",
                "–°–µ–≥–æ–¥–Ω—è –±—ã–ª –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –¥–µ–Ω—å!",
                "–õ—é–±–ª—é —Ç–∞–∫–∏–µ –≤–µ—á–µ—Ä–∞ —É –∫–æ—Å—Ç—Ä–∞.",
                "–ü–æ–π–º–∞–ª –º–æ–º–µ–Ω—Ç —Å—á–∞—Å—Ç—å—è!",
                "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—Å—å –ø—Ä–∏—Ä–æ–¥–æ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.",
                "–ú–∞–ª–µ–Ω—å–∫–∏–µ —Ä–∞–¥–æ—Å—Ç–∏ –¥–µ–ª–∞—é—Ç –∂–∏–∑–Ω—å —è—Ä—á–µ.",
                "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É—é —Å –Ω–æ–≤—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏.",
                "–ü–æ–±—ã–≤–∞–ª –≤ –Ω–æ–≤–æ–º –º–µ—Å—Ç–µ ‚Äî –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ!",
                "–î–µ–ª—é—Å—å —Ö–æ—Ä–æ—à–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º!",
                "–°–µ–≥–æ–¥–Ω—è –±—ã–ª –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç–∏–π!",
                "–ü–æ–π–º–∞–ª –∑–∞–∫–∞—Ç –Ω–∞ –±–µ—Ä–µ–≥—É –º–æ—Ä—è.",
                "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—Å—å –º—É–∑—ã–∫–æ–π –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º.",
                "–ü—Ä–æ–≤–µ–ª –¥–µ–Ω—å —Å —Å–µ–º—å–µ–π ‚Äî —ç—Ç–æ –±–µ—Å—Ü–µ–Ω–Ω–æ.",
                "–ü—Ä–æ–±—É—é —Å–µ–±—è –≤ –Ω–æ–≤–æ–º —Ö–æ–±–±–∏.",
                "–°–µ–≥–æ–¥–Ω—è –±—ã–ª –¥–µ–Ω—å –¥–ª—è —Å–µ–±—è!",
                "–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—Å–≤–µ—Ç —Å–µ–≥–æ–¥–Ω—è! üåÖ",
                "–ù–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç –ø–∞—Å—Ç—ã ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–±—ä–µ–¥–µ–Ω–∏–µ! üçù",
                "–£—Ç—Ä–µ–Ω–Ω—è—è –π–æ–≥–∞ –∑–∞—Ä—è–∂–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–µ–π! üßò‚Äç‚ôÄÔ∏è",
                "–ü–æ–π–º–∞–ª —Ä–µ–¥–∫–∏–π –º–æ–º–µ–Ω—Ç –≤ –ø—Ä–∏—Ä–æ–¥–µ! ü¶ã",
                "–í—Å—Ç—Ä–µ—á–∞ —Å –¥—Ä—É–∑—å—è–º–∏ –≤ –ª—é–±–∏–º–æ–º –∫–∞—Ñ–µ! ‚òï",
                "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! üíª",
                "–í–µ—á–µ—Ä–Ω—è—è –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É üåÜ",
                "–ü—Ä–æ–±—É—é —Å–µ–±—è –≤ –º–∞–∫—Ä–æ—Å—ä–µ–º–∫–µ üì∏",
                "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –º–æ—Ä–µ–º üåä",
                "–ù–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç –¥–µ—Å–µ—Ä—Ç–∞ ‚Äî –ø–∞–ª—å—á–∏–∫–∏ –æ–±–ª–∏–∂–µ—à—å! üç∞",
                "–£—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—Ñ–µ —Å –∫–Ω–∏–≥–æ–π ‚Äî –ª—É—á—à–∏–π —Å—Ç–∞—Ä—Ç –¥–Ω—è! üìö",
                "–ü–æ–π–º–∞–ª —Ä–µ–¥–∫–∏–π –∫–∞–¥—Ä —Å –ø—Ç–∏—Ü–∞–º–∏! ü¶Ö",
                "–í–µ—á–µ—Ä–Ω—è—è –ø—Ä–æ–±–µ–∂–∫–∞ –ø–æ –ø–∞—Ä–∫—É üèÉ‚Äç‚ôÇÔ∏è",
                "–ù–æ–≤—ã–π –∞–ª—å–±–æ–º –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ üéµ",
                "–í—Å—Ç—Ä–µ—á–∞ —Ä–∞—Å—Å–≤–µ—Ç–∞ –Ω–∞ –ø–ª—è–∂–µ üåÖ"
            ])
        ]
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤, –¥–æ–±–∞–≤–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ
        while len(post_texts) < 75:
            post_texts.append(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç #{len(post_texts)+1}")

        # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        posts = []
        for i in range(150):
            created_at = timezone.now() - timedelta(days=random.randint(0, 30), hours=random.randint(0, 23), minutes=random.randint(0, 59))
            image_path = self.create_test_image(idx=i)
            post = Post.objects.create(
                author=users[i % len(users)],
                text=fake.paragraph(nb_sentences=random.randint(3, 10)),
                image=image_path,
                created_at=created_at
            )
            posts.append(post)
            self.stdout.write(f'–°–æ–∑–¥–∞–Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—è {post.id}')

        # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        comment_texts = [
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π #{i+1}: {txt}" for i, txt in enumerate([
                "–û—Ç–ª–∏—á–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è! üëç",
                "–°–æ–≥–ª–∞—Å–µ–Ω —Å —Ç–æ–±–æ–π –ø–æ–ª–Ω–æ—Å—Ç—å—é!",
                "–ö—Ä–∞—Å–∏–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏! üì∏",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–æ—Å—Ç!",
                "–û—á–µ–Ω—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ! ‚ú®",
                "–ü–æ–¥–µ–ª–∏—Å—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏?",
                "–ì–¥–µ —ç—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ?",
                "–ö–∞–∫ —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å —ç—Ç–æ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å?",
                "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —É—Å–ø–µ—Ö–æ–º! üéâ",
                "–ñ–¥—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è!",
                "–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! üí°",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é!",
                "–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! ü§î",
                "–ö–ª–∞—Å—Å–Ω—ã–π –∫–∞–¥—Ä! üì∑",
                "–ü–æ–¥–µ–ª–∏—Å—å —Ä–µ—Ü–µ–ø—Ç–æ–º? üë®‚Äçüç≥",
                "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –ø—Ä–∏–º–µ—Ä!",
                "–°—É–ø–µ—Ä!",
                "–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–∞—É!",
                "–û—á–µ–Ω—å –∫—Ä—É—Ç–æ!",
                "–ó–¥–æ—Ä–æ–≤–æ –ø—Ä–∏–¥—É–º–∞–Ω–æ!",
                "–ë–µ—Ä—É –Ω–∞ –∑–∞–º–µ—Ç–∫—É!",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—é!",
                "–ü–æ—Ç—Ä—è—Å–∞—é—â–µ!",
                "–û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!",
                "–°—É–ø–µ—Ä –∏–¥–µ—è!",
                "–ö–ª–∞—Å—Å–Ω—ã–π –ø–æ—Å—Ç! üåü",
                "–û—Ç–ª–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ! üì∏",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ! ‚ú®",
                "–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –º—ã—Å–ª—å! üí≠",
                "–ü–æ–¥–µ–ª–∏—Å—å –æ–ø—ã—Ç–æ–º? ü§î",
                "–ö—Ä–∞—Å–∏–≤—ã–π –º–æ–º–µ–Ω—Ç! üåÖ",
                "–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! üí°",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é! üëç",
                "–û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ! üìö",
                "–ö–ª–∞—Å—Å–Ω—ã–π –∫–∞–¥—Ä! üì∑",
                "–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π —Å–Ω–∏–º–æ–∫! üì∏",
                "–ö–∞–∫ —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –ø–æ–π–º–∞—Ç—å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç? ü§î",
                "–ü–æ–¥–µ–ª–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞–º–µ—Ä—ã? üì∑",
                "–û—á–µ–Ω—å –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ! ‚ú®",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∑–∏—Ç–∏–≤! üòä",
                "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –ø–æ—Å—Ç! üí´",
                "–ö—Ä–∞—Å–∏–≤—ã–µ —Ü–≤–µ—Ç–∞! üé®",
                "–û—Ç–ª–∏—á–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è! üìê",
                "–ü–æ–¥–µ–ª–∏—Å—å —Å–µ–∫—Ä–µ—Ç–æ–º —É—Å–ø–µ—Ö–∞? ü§´",
                "–û—á–µ–Ω—å –¥—É—à–µ–≤–Ω–æ! üíñ",
                "–ö–ª–∞—Å—Å–Ω–∞—è –∏–¥–µ—è –¥–ª—è —Ñ–æ—Ç–æ! üì∏",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ —ç–º–æ—Ü–∏–∏! üòç",
                "–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π —Ä–∞–∫—É—Ä—Å! üì∑",
                "–û—á–µ–Ω—å —Å—Ç–∏–ª—å–Ω–æ! üëå",
                "–ü–æ–¥–µ–ª–∏—Å—å –ø–ª–∞–Ω–∞–º–∏? üìù"
            ])
        ]
        while len(comment_texts) < 100:
            comment_texts.append(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π #{len(comment_texts)+1}")

        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Ä–∞–∑–Ω—ã–º –ø–æ—Å—Ç–∞–º
        used_post_comment_pairs = set()
        for i in range(300):
            # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä—ã (–ø–æ—Å—Ç, –∞–≤—Ç–æ—Ä)
            while True:
                post = random.choice(posts)
                author = random.choice(users)
                pair = (post.id, author.id)
                if pair not in used_post_comment_pairs:
                    used_post_comment_pairs.add(pair)
                    break
            comment_time = post.created_at + timedelta(hours=random.randint(1, 24), minutes=random.randint(0, 59))
            Comment.objects.create(
                post=post,
                author=author,
                text=fake.text(max_nb_chars=random.randint(30, 200)),
                created_at=fake.date_time_between(start_date=post.created_at, end_date='now')
            )
            self.stdout.write(f'–°–æ–∑–¥–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {i+1}')

        # –õ–∞–π–∫–∏ (–æ—Å—Ç–∞–≤–∏–º —Å–ª—É—á–∞–π–Ω—ã–º–∏, –Ω–æ –±–µ–∑ –¥—É–±–ª–µ–π)
        used_likes = set()
        for i in range(500):
            post = random.choice(posts)
            user = random.choice(users)
            like_time = post.created_at + timedelta(minutes=random.randint(1, 60))
            key = (post.id, user.id)
            if key not in used_likes:
                Like.objects.create(
                    post=post,
                    user=user,
                    created_at=like_time
                )
                used_likes.add(key)
                self.stdout.write(f'–°–æ–∑–¥–∞–Ω –ª–∞–π–∫ {i+1}')

        self.stdout.write(self.style.SUCCESS('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!')) 